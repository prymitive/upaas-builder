#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    :copyright: Copyright 2013 by ≈Åukasz Mierzwa
    :contact: l.mierzwa@gmail.com
"""


import os

from plumbum import cli
from upaas.builder import exceptions

from upaas.config.base import ConfigurationError
from upaas.config.main import load_main_config
from upaas.cli.base import UPaaSApplication
from upaas.config.metadata import MetadataConfig
from upaas.builder.builder import Builder

from upaas_builder import __version__ as UPAAS_VERSION


class ExitCodes:
    ok = 0
    config_error = 1
    metadata_error = 2
    not_root = 3


class BuilderApplication(UPaaSApplication):

    VERSION = UPAAS_VERSION

    fresh = cli.Flag(["f", "force-fresh"], help="Force building fresh package")

    def root_check(self):
        if os.geteuid() != 0:
            self.log.error(u"%s must be run as root user" % self.PROGNAME)
            return exit(ExitCodes.not_root)

    def main(self, metadata):
        self.setup_logger()
        r = self.root_check()
        if r:
            return r

        builder_config = load_main_config()
        if not builder_config:
            self.log.error(u"Missing uPaaS configuration")
            return ExitCodes.config_error

        try:
            self.metadata = MetadataConfig.from_file(metadata)
        except ConfigurationError:
            self.log.error(u"Invalid metadata, aborting")
            return ExitCodes.metadata_error

        try:
            self.builder = Builder(builder_config, self.metadata)
        except exceptions.InvalidConfiguration:
            self.log.error(u"Invalid uPaaS configuration, aborting")
            return ExitCodes.config_error

        self.log.info(u"Building package from '%s'" % metadata)
        self.builder.build_package(force_fresh=self.fresh)


if __name__ == "__main__":
    BuilderApplication.run()
